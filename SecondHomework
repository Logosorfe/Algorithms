void test1(int n) { 
if (n==1) return; 
  for (int i=1; i<=n; i++) 
      for (int j=1; j<=n; j++) 
      System.out.println("*"); 
      break; 
} 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
test1 = O(2n + (n^2 + 2n)) = O(n^2);
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void test2(int n) { 
int a = 0; 
for (i = 0; i < n; i++) 
    for (j = n; j > i; j--) 
a = a + i + j; 
} 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
test2 = O(2 + (n^2 + n/2) + n^2 + (n^2 - n/2) + (n^2 - n) + (n^2 - 3n/2) + (n^2 - 2n))= O(n^2 - (n-3)*n/2) = O((n^2 + 3n)/2) = O(n^2);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void test3(int n) {
int i, j, a = 0; 
for (i = n/2; i <=n; i++) 
     for (j = 2; j <=n; j=j*2) 
a=a+n/2; 
} 
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
test3 = O(2n + 2n + 2n + (2n + 1) + (2n + 2) + 2n + (2n + 1) + 5n) = O(n);
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
*void test4(int n) {
int a = 0, i = n; 
while (i > 0) {
a += i; i /= 2; }
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
test4 = O(log n)
